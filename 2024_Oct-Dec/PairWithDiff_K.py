#User function Template for python3
from collections import Counter
class Solution:
	def countPairsWithDiffK(self,arr, k):
    	# code here
         set1=Counter(arr)
         count=0
         for ele in arr:
             current=ele+k
             if current in set1:
                 count+=set1[current]
         return count




#{ 
 # Driver Code Starts
#Initial Template for Python 3


ob = Solution()
# arr = [1, 5, 3, 4, 2]
arr='5424 16842 31660 24874 16565 21940 4293 29335 20612 14147 8546 26661 9192 8746 11701 26447 6212 21710 14053 30636 13724 6834 28596 268 1110 23346 24672 28612 28738 117 454 29510 23769 19101 5069 2805 20162 25408 13058 21815 20123 17692 29056 21707 26869 19462 30483 8285 28576 292 27805 12375 24618 30556 14008 16123 5026 19468 17308 28335 7073 8188 28740 10903 28812 7313 18636 30057 21779 22851 10270 6781 4861 13648 31437 29988 29992 31154 10561 16955 8907 22351 27925 12288 16383 5489 5565 8228 30590 1141 108 20513 20906 2247 18228 23501 31953 21006 27504 20015 27311 4771 32607 13458 26420 19272 4881 26585 3208 32535 26759 18 14413 25528 13078 9806 26148 25047 26124 14511 4978 31189 22166 29890 4196 24766 13537 7183 25136 27004 8320 18159 6814 3658 23566 22942 18632 11883 25620 20369 26397 21531 27948 20746 27308 5830 3431 18153 22432 28024 5357 24773 32518 1429 23011 16699 18903 29130 31634 17542 13618 17731 24773 5456 25577 28446 30066 968 26943 27168 27549 21237 12528 5287 890 28746 10354 17632 7890 18810 3451 27962 9127 13454 1475 25883 29211 7732 25611 10705 29070 29274 15966 11211 30983 29435 14743 31753 5845 28985 11811 28113 31606 7341 2568 164 2999 23803 5158 9840 24093 27049 29885 14855 10116 5169 10032 14800 23302 30804 14601 6844 286 1714 31292 18300 2573 7576 688 8178 8061 9241 12539 3301 14693 23392 1646 31736 31276 23108 1105 22493 5649 26397 28271 20678 18890 9174 5846 2332 9323 16452 5848 31348 10378 9910 6485 9919 2209 22222 6717 27072 691 25231 16208 32452 7987 16822 11816 3725 22305 28494 890 22927 25974 1407 20377 21087 18370 19367 15419 15464 12820 27308 16256 8928 31258 15248 48 15354 15753 25669 20292 3165 18367 14019 23209 24278 31400 1625 32064 25673 16094 26432 20521 4078 16148 3190 24897 953 29364 14281 13033 8474 15303 28722 26890 4583 7190 29285 18262 23959 17806 4006 25808 24240 2537 28382 14478 11394 28043 25582 25533 19734 25002 20803 23783 17250 27058 18347 24689 19902 12264 22631 19048 26780 19789 19841 15741 26995 18629 15456 15181 17916 4472 9881 4582 23457 30841 7432 17031 19251 28070 6432 17832 15579 975 127 20538 8275 26 1733 32304 15701 30885 24999 1598 10324 18030 831 23265 28523 20080 20134 23711 5011 26127 31429 400 8728 22198 5992 5661 590 17599 26772 31496 19328 32147 3099 1197 14121 28946 7533 24455 870 23093 19377 7669 22956 23281 5653 21310 3510 3935 8802 24531 18626 23579 25043 21205 29949 31722 30759 1239 32060 4255 6389 20453 13548 15167 20288 2245 31820 32611 25419 7548 29914 30174 21166 32021 23050 4768 3754 11421 21054 474 29882 11634 19443 24675 13674 6334 15160 21339 7532 5182 19301 17166 29929 1096 22793 15642 26901 7948 18468 16853 13318 17690 2711 233 30406 17188 27352 18753 31143 24837 28394 12329 18134 25091 26509 13232 21299 23121 32690 23633 10592 32216 24625 8659 19224 19512 15294 5998 15555 15881 22298 9007 28487 22374 24966 17566 31776 17324 12669 11933 26547 24191 14754 14483 24031 19982 18936 27338 7382 4760 29009 10774 555 12080 4873 18104 28204 20413 1267 29313 29041 4164 18836 25147 30901 18794 14991 7748 27365 1588 14177 18044 28023 1810 11342 19809 17149 30236 1435 28281 30714 12443 25342 25585 20980 18891 8019 8067 13514 10975 144 2717 29256 29766 9211 4543 14329 1069 31387 32548 3900 17989 27116 26790 9114 12486 25815 13532 17239 4788 4320 31621 20039 5985 19362 17705 1763 9011 9336 28157 31132 28071 7806 12296 28272 31894 20152 6276 6330 25783 10896 27783 31054 29542 6790 16610 9925 9635 9507 18761 28694 4190 17966 8885 3431 7666 17955 7431 21282 17647 9697 18414 6986 7196 29347 18186 22800 28604 5681 12626 2721 15377 30552 32691 32067 12575 32407 20217 6048 9138 21275 30963 7777 4002 25582 18642 9983 3926 4459 20179 11478 27783 2805 5918 31868 11846 13544 18413 26960 18497 10960 27376 342 20290 12761 26097 13122 22264 12167 26292 6866 23802 30887 17953 26465 25865 3206 9892 4282 10901 4192 20949 20010 2947 7963 6484 985 4142 16693 16119 6745 13484 8444 10280 29824 22354 20221 24712 30579 28794 10942 12249 22788 30595 17328 18202 10302 6426 18015 18675 17469 8888 18924 12628 13636 18284 4541 24666 7177 8667 6003 19570 11091 6021 28956 8128 24519 330 26538 17602 27135 15660 20901 9776 32477 3414 1564 9767 543 26718 31713 4231 16179 7879 26870 3226 9292 31178 30274 20982 13237 14165 23432 9380 8038 1877 30618 23681 17109 28209 14538 31717 28430 12438 27042 6531 15622 11386 13781 8592 23084 17243 31604 12840 834 14792 15461 5869 8555 12323 17426 10225 15749 6309 21854 4054 15800 20130 29917 15667 8527 13071 9028 826 11975 29249 7198 11672 18470 22263 27841 2973 22927 20123 30593 13981 5650 709 14115 6038 30408 11265 22165 28690 12320 466 28892 27215 4468 27639 3405 29854 736 22764 11264 27657 5459 23988 30338 23096 22758 726 26826 19094 28013 25254 1646 31407 332 31941 28695 27100 12941 25323 27955 3107 1583 8932 15849 9305 27072 4569 18770 2441 29486 23761 31718 23450 21210 631 27188 27435 11246 6686 3031 22722 18161 3074 8869 12070 21144 7889 8745 32009 9951 32362 11092 12778 15961 8164 28783 16954 22980 9938 5460 22206 481 12229 24542 2868 23427 9235 19614 57 485 31447 23503 17514 23360 2873 10892 22730 7069 21488 11329 21604 27112 23557 6240 27441 23367 4313 24661 23611 14506 17769 16827 2819 17058 14033 18640 18464 26486 14863 22310 3370 8052 30474 668 12246 25477 21715 24717 20578 29188 31530 4423 1844 21968 3396 8127 5566 25504 459 2435 7844 8599 15399 751 10529 19737 19196'
arr=[int(x) for x in arr.split(' ')]
k = 777
ans = ob.countPairsWithDiffK(arr, k)
print(ans)


# } Driver Code Ends